/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rs.ac.bg.fon.nprog.client.gui;

import rs.ac.bg.fon.nprog.domen.EnumPol;
import rs.ac.bg.fon.nprog.domen.Korisnik;
import rs.ac.bg.fon.nprog.domen.Lokacija;
import rs.ac.bg.fon.nprog.domen.PrijavaPronalaskaPsa;
import rs.ac.bg.fon.nprog.domen.Rasa;
import rs.ac.bg.fon.nprog.client.helper.MapHelper;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.image.ImageObserver;
import java.awt.image.RenderedImage;
import java.io.File;
import java.io.IOException;
import java.sql.Timestamp;
import java.text.ParseException;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import rs.ac.bg.fon.nprog.client.kontoler.Kontroler;

/**
 *
 * @author tamara
 */
public class FrmPrijavaPronalaska extends javax.swing.JDialog {
    EnumModForme mod;
    PrijavaPronalaskaPsa prijavaPronalaskaPsa;
    FrmMain glavnaForma;
    BufferedImage bi;
    Korisnik ulogovan;
    private double x=0;
    private double y=0;
    private final double xBeograd=44.81691551782855;
    private final double yBeograd=20.3961181640625;
    /**
     * Creates new form frmPrijavaPronalaska
     */
    public FrmPrijavaPronalaska(java.awt.Frame parent, boolean modal, EnumModForme mod, PrijavaPronalaskaPsa prijavaPronalaskaPsa, FrmMain glavnaForma, Korisnik ulogovan) {
        super(parent, modal);
        initComponents();
        txtSlika.setEnabled(false);
        txtSlika.setEditable(false);
        this.glavnaForma=glavnaForma;
        this.ulogovan=ulogovan;
        this.prijavaPronalaskaPsa=prijavaPronalaskaPsa;
        srediFormu();
        this.mod=mod;
        primeniMod(mod);
        
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        pnPrijavaPronalaskaPsa = new javax.swing.JPanel();
        lblPrijavaPronalaskaPsaId = new javax.swing.JLabel();
        lblRasa = new javax.swing.JLabel();
        lblBoja = new javax.swing.JLabel();
        lblLokacija = new javax.swing.JLabel();
        lblPol = new javax.swing.JLabel();
        lblVremePronalaska = new javax.swing.JLabel();
        lblSlika = new javax.swing.JLabel();
        lblKontaktNalazaca = new javax.swing.JLabel();
        txtPrijavaPronalaskaPsaId = new javax.swing.JTextField();
        txtKontaktNalazaca = new javax.swing.JTextField();
        cbRasa = new javax.swing.JComboBox<>();
        cbPol = new javax.swing.JComboBox<>();
        cbLokacija = new javax.swing.JComboBox<>();
        txtVremePronalaska = new javax.swing.JTextField();
        txtSlika = new javax.swing.JTextField();
        txtBoja = new javax.swing.JTextField();
        btnIzmeniPrijavu = new javax.swing.JButton();
        btnObrisiPrijavu = new javax.swing.JButton();
        btnNazad = new javax.swing.JButton();
        btnSacuvajPrijavu = new javax.swing.JButton();
        btnIzaberi = new javax.swing.JButton();
        lblError = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblPrikazSlike = new javax.swing.JLabel();
        btnPrikaziMapu = new javax.swing.JButton();
        btnDodajLokaciju = new javax.swing.JButton();
        lblOpis = new javax.swing.JLabel();
        txtOpis = new javax.swing.JTextField();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Prijava pronalaska psa");

        pnPrijavaPronalaskaPsa.setBackground(new java.awt.Color(153, 153, 153));
        pnPrijavaPronalaskaPsa.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Podaci o psu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        lblPrijavaPronalaskaPsaId.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblPrijavaPronalaskaPsaId.setForeground(new java.awt.Color(255, 255, 255));
        lblPrijavaPronalaskaPsaId.setText("ID");

        lblRasa.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblRasa.setForeground(new java.awt.Color(255, 255, 255));
        lblRasa.setText("Rasa");

        lblBoja.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblBoja.setForeground(new java.awt.Color(255, 255, 255));
        lblBoja.setText("Boja");

        lblLokacija.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblLokacija.setForeground(new java.awt.Color(255, 255, 255));
        lblLokacija.setText("Lokacija");

        lblPol.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblPol.setForeground(new java.awt.Color(255, 255, 255));
        lblPol.setText("Pol");

        lblVremePronalaska.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblVremePronalaska.setForeground(new java.awt.Color(255, 255, 255));
        lblVremePronalaska.setText("Vreme pronalaska");

        lblSlika.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblSlika.setForeground(new java.awt.Color(255, 255, 255));
        lblSlika.setText("Slika");

        lblKontaktNalazaca.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblKontaktNalazaca.setForeground(new java.awt.Color(255, 255, 255));
        lblKontaktNalazaca.setText("Kontakt nalazača");

        txtPrijavaPronalaskaPsaId.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtPrijavaPronalaskaPsaId.setForeground(new java.awt.Color(102, 102, 102));

        txtKontaktNalazaca.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtKontaktNalazaca.setForeground(new java.awt.Color(102, 102, 102));

        cbRasa.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        cbRasa.setForeground(new java.awt.Color(102, 102, 102));
//        cbRasa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbPol.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        cbPol.setForeground(new java.awt.Color(102, 102, 102));
        cbPol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbLokacija.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        cbLokacija.setForeground(new java.awt.Color(102, 102, 102));
//        cbLokacija.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbLokacija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbLokacijaActionPerformed(evt);
            }
        });

        txtVremePronalaska.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtVremePronalaska.setForeground(new java.awt.Color(102, 102, 102));

        txtSlika.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtSlika.setForeground(new java.awt.Color(102, 102, 102));

        txtBoja.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtBoja.setForeground(new java.awt.Color(102, 102, 102));
        txtBoja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBojaActionPerformed(evt);
            }
        });

        btnIzmeniPrijavu.setBackground(new java.awt.Color(204, 204, 204));
        btnIzmeniPrijavu.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnIzmeniPrijavu.setForeground(new java.awt.Color(102, 102, 102));
        btnIzmeniPrijavu.setText("Izmeni");
        btnIzmeniPrijavu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniPrijavuActionPerformed(evt);
            }
        });

        btnObrisiPrijavu.setBackground(new java.awt.Color(204, 204, 204));
        btnObrisiPrijavu.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnObrisiPrijavu.setForeground(new java.awt.Color(102, 102, 102));
        btnObrisiPrijavu.setText("Obriši");
        btnObrisiPrijavu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiPrijavuActionPerformed(evt);
            }
        });

        btnNazad.setBackground(new java.awt.Color(204, 204, 204));
        btnNazad.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnNazad.setForeground(new java.awt.Color(102, 102, 102));
        btnNazad.setText("Nazad");
        btnNazad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNazadActionPerformed(evt);
            }
        });

        btnSacuvajPrijavu.setBackground(new java.awt.Color(204, 204, 204));
        btnSacuvajPrijavu.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnSacuvajPrijavu.setForeground(new java.awt.Color(102, 102, 102));
        btnSacuvajPrijavu.setText("Sačuvaj");
        btnSacuvajPrijavu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajPrijavuActionPerformed(evt);
            }
        });

        btnIzaberi.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnIzaberi.setForeground(new java.awt.Color(102, 102, 102));
        btnIzaberi.setText("Izaberi");
        btnIzaberi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzaberiActionPerformed(evt);
            }
        });

        lblError.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblError.setForeground(new java.awt.Color(255, 51, 51));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rs/ac/bg/fon/nprog/img/logo.png"))); // NOI18N

        btnPrikaziMapu.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnPrikaziMapu.setForeground(new java.awt.Color(102, 102, 102));
        btnPrikaziMapu.setText("Prikaži");
        btnPrikaziMapu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrikaziMapuActionPerformed(evt);
            }
        });

        btnDodajLokaciju.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnDodajLokaciju.setForeground(new java.awt.Color(102, 102, 102));
        btnDodajLokaciju.setText("Dodaj");
        btnDodajLokaciju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajLokacijuActionPerformed(evt);
            }
        });

        lblOpis.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblOpis.setForeground(new java.awt.Color(255, 255, 255));
        lblOpis.setText("Opis lokacije");

        txtOpis.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        javax.swing.GroupLayout pnPrijavaPronalaskaPsaLayout = new javax.swing.GroupLayout(pnPrijavaPronalaskaPsa);
        pnPrijavaPronalaskaPsa.setLayout(pnPrijavaPronalaskaPsaLayout);
        pnPrijavaPronalaskaPsaLayout.setHorizontalGroup(
            pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPrijavaPronalaskaPsaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnPrijavaPronalaskaPsaLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPrijavaPronalaskaPsaLayout.createSequentialGroup()
                        .addComponent(lblLokacija)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnPrijavaPronalaskaPsaLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(btnPrikaziMapu, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cbLokacija, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnPrijavaPronalaskaPsaLayout.createSequentialGroup()
                        .addGroup(pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnPrijavaPronalaskaPsaLayout.createSequentialGroup()
                                .addGroup(pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnObrisiPrijavu, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnIzmeniPrijavu, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSacuvajPrijavu, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnNazad, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblPrikazSlike, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblRasa)
                            .addComponent(lblBoja)
                            .addGroup(pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnPrijavaPronalaskaPsaLayout.createSequentialGroup()
                                    .addComponent(lblPrijavaPronalaskaPsaId, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                                    .addComponent(txtPrijavaPronalaskaPsaId, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtBoja, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnPrijavaPronalaskaPsaLayout.createSequentialGroup()
                                            .addComponent(lblPol)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 164, Short.MAX_VALUE)
                                            .addComponent(cbPol, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(btnDodajLokaciju, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnPrijavaPronalaskaPsaLayout.createSequentialGroup()
                                            .addGroup(pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lblVremePronalaska)
                                                .addComponent(lblKontaktNalazaca)
                                                .addComponent(lblSlika, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lblOpis))
                                            .addGap(39, 39, 39)
                                            .addGroup(pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtSlika, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                                .addComponent(txtKontaktNalazaca)
                                                .addComponent(txtVremePronalaska)
                                                .addComponent(txtOpis))))
                                    .addComponent(cbRasa, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnIzaberi, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnPrijavaPronalaskaPsaLayout.setVerticalGroup(
            pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPrijavaPronalaskaPsaLayout.createSequentialGroup()
                .addGroup(pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnPrijavaPronalaskaPsaLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPrijavaPronalaskaPsaLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPrijavaPronalaskaPsaId)
                    .addComponent(txtPrijavaPronalaskaPsaId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbRasa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRasa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBoja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBoja))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPol)
                    .addComponent(cbPol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblLokacija)
                    .addComponent(cbLokacija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrikaziMapu)
                    .addComponent(btnDodajLokaciju))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOpis)
                    .addComponent(txtOpis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVremePronalaska, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblVremePronalaska))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKontaktNalazaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblKontaktNalazaca))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSlika, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSlika))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnIzaberi, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnPrijavaPronalaskaPsaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnPrijavaPronalaskaPsaLayout.createSequentialGroup()
                        .addComponent(btnObrisiPrijavu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnIzmeniPrijavu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSacuvajPrijavu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNazad, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblPrikazSlike, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnPrijavaPronalaskaPsa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnPrijavaPronalaskaPsa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbLokacijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbLokacijaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbLokacijaActionPerformed

    private void btnNazadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNazadActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnNazadActionPerformed

    private void btnIzmeniPrijavuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniPrijavuActionPerformed
        // TODO add your handling code here:
        this.mod=EnumModForme.EDIT;
        primeniMod(mod);
    }//GEN-LAST:event_btnIzmeniPrijavuActionPerformed

    private void btnObrisiPrijavuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiPrijavuActionPerformed
        try {
            // TODO add your handling code here:
            long id=Integer.parseInt(txtPrijavaPronalaskaPsaId.getText());
//            File file = new File(prijavaPronalaskaPsa.getSlikaURL().getDescription()); 
//            file.delete();
            PrijavaPronalaskaPsa prijavaPronalaskaPsa=new PrijavaPronalaskaPsa();
            prijavaPronalaskaPsa.setPrijavaPronalaskaPsaId(id);
            
            prijavaPronalaskaPsa.setSlikaURL(new ImageIcon(txtSlika.getText()));
            
            Kontroler.vratiInstancu().obrisiPrijavuPronalaskaPsa(prijavaPronalaskaPsa);
            
            
            //JOptionPane.showMessageDialog(this, "Sistem je obrisao prijavu pronalaska psa.");
            glavnaForma.osveziListe();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FrmPrijavaPronalaska.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnObrisiPrijavuActionPerformed

    private void btnSacuvajPrijavuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajPrijavuActionPerformed
        // TODO add your handling code here:
        Rasa r=(Rasa) cbRasa.getSelectedItem();
        Lokacija l=(Lokacija) cbLokacija.getSelectedItem();
        EnumPol pol=EnumPol.valueOf(cbPol.getSelectedItem().toString());
        String boja=txtBoja.getText();
        String opis=txtOpis.getText();
        String uvezenaSlika=txtSlika.getText();
        if(uvezenaSlika.isEmpty()){
            lblError.setVisible(true);
            lblError.setText("Molimo vas popunite sva polja");
            return;
        }
        String konacnaPutanja=dajPutanju(uvezenaSlika);
        
        
        String kontaktNalazaca=txtKontaktNalazaca.getText();
        Date vremePronalaska;
        if(boja.isEmpty() || uvezenaSlika.isEmpty() || kontaktNalazaca.isEmpty() || opis.isEmpty()){
                lblError.setVisible(true);
                lblError.setText("Molimo vas popunite sva polja");
                JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti prijavu pronalaska psa.", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }
        if(x==0 && y==0){
                lblError.setText("Molimo vas izaberite lokaciju sa mape.");
                JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti zahtev za traženje psa.", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }
        lblError.setVisible(false);
        try {
            vremePronalaska=Kontroler.vratiInstancu().parseDatumVreme(txtVremePronalaska.getText());
        } catch (ParseException ex) {
            //lblErrorVremePronalaska.setVisible(true);
            //lblErrorVremePronalaska.setText("Format datuma koji je prihvatljiv je dd-MM-yyyy");
            JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti prijavu pronalaska psa.", "Greška", JOptionPane.ERROR_MESSAGE);
            //Logger.getLogger(FrmPrijavaPronalaska.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
        //lblErrorVremePronalaska.setVisible(false);
        long id;
        if(mod==EnumModForme.EDIT){
            id=Integer.parseInt(txtPrijavaPronalaskaPsaId.getText());

        }else{
            id=-1;
        }
        
        try {
            ImageIcon slika;
            /*if(prijavaPronalaskaPsa!=null){
                slika=prijavaPronalaskaPsa.getSlikaURL();
            }
            if(!konacnaPutanja.isEmpty()){
                slika=sacuvajSliku(konacnaPutanja);
            }*/
            //ovo je kad je update i slika je nepromenjena
            if(prijavaPronalaskaPsa!=null && prijavaPronalaskaPsa.getSlikaURL().getDescription().equals(txtSlika.getText())){
                slika=prijavaPronalaskaPsa.getSlikaURL();
                PrijavaPronalaskaPsa prijavaPronalaskaPsaNew=new PrijavaPronalaskaPsa(id, pol, boja, vremePronalaska, kontaktNalazaca, slika, r, l, x, y, opis, ulogovan);
                Kontroler.vratiInstancu().zapamtiPrijavuPronalaskaPsa(prijavaPronalaskaPsaNew);
                this.dispose();
                glavnaForma.osveziListe();  
            // ovo je i za update i insert a slika je drugacija
            
            }else{
                //slika=sacuvajSliku(konacnaPutanja); PROMENA!!!!!!!
                slika = new ImageIcon(txtSlika.getText()); //PROMENA!!!
                if(slika==null){
                    System.out.println("Slika je null");
                    return;
                }
                PrijavaPronalaskaPsa prijavaPronalaskaPsaNew=new PrijavaPronalaskaPsa(id, pol, boja, vremePronalaska, kontaktNalazaca, slika, r, l, x, y, opis, ulogovan);
                Kontroler.vratiInstancu().zapamtiPrijavuPronalaskaPsa(prijavaPronalaskaPsaNew);
                this.dispose();
                glavnaForma.osveziListe();
            }
            /*PrijavaPronalaskaPsa prijavaPronalaskaPsaNew=new PrijavaPronalaskaPsa(id, pol, boja, vremePronalaska, kontaktNalazaca, slika, r, l);
            Kontroler.vratiInstancu().zapamtiPrijavuPronalaskaPsa(prijavaPronalaskaPsaNew);
            //ako je proslo cuvaj i sliku 
            //primeniMod(EnumModForme.SHOW);
            this.dispose();
            glavnaForma.osveziListe();*/
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,ex.getMessage(),"Greška", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FrmPrijavaPronalaska.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnSacuvajPrijavuActionPerformed

    private void txtBojaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBojaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBojaActionPerformed

    private void btnIzaberiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzaberiActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        jfc.showOpenDialog(null);
        File f = jfc.getSelectedFile();
        if(f==null){
            return;
        }
        String path=f.getAbsolutePath();
        lblPrikazSlike.setIcon(null);
        Kontroler.vratiInstancu().ucitajSliku(path, lblPrikazSlike);
        try {
            //System.out.println(path);
            bi = ImageIO.read(f);
            
        } catch (IOException ex) {
            Logger.getLogger(FrmPrijavaPronalaska.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtSlika.setText(path);
        
    }//GEN-LAST:event_btnIzaberiActionPerformed

    private void btnPrikaziMapuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrikaziMapuActionPerformed
        // TODO add your handling code here:
        MapHelper mapa=new MapHelper();
        if(prijavaPronalaskaPsa!=null){
            mapa.prikaziNaMapi(prijavaPronalaskaPsa.getX(), prijavaPronalaskaPsa.getY());
        }
        
    }//GEN-LAST:event_btnPrikaziMapuActionPerformed

    private void btnDodajLokacijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajLokacijuActionPerformed
        // TODO add your handling code here:
        MapHelper mapHelper=new MapHelper();
        mapHelper.setFormaPrijave(this);
        System.out.println("Pocetna vrednost: "+mapHelper.getLokacijaReturn());
        if(prijavaPronalaskaPsa!=null){
            mapHelper.mapaPrijava(prijavaPronalaskaPsa.getX(), prijavaPronalaskaPsa.getY());
        }else{
             mapHelper.mapaPrijava(xBeograd, yBeograd);
        }
       
        
        
        //System.out.println("Krajnja: "+mapHelper.getLokacijaReturn());
        //insert lokacije u bazu
        //setovanje lokacije na prijavu 
        //prikaz u combo box-u (refresh liste) - popuniCombo()
        
    }//GEN-LAST:event_btnDodajLokacijuActionPerformed

    private void srediFormu() {
        //lblErrorVremePronalaska.setVisible(false);
        //lblError.setVisible(false);
        popuniComboLokacija();
        popuniComboRasa();
        popuniComboPol();
        popuniVrednosti();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajLokaciju;
    private javax.swing.JButton btnIzaberi;
    private javax.swing.JButton btnIzmeniPrijavu;
    private javax.swing.JButton btnNazad;
    private javax.swing.JButton btnObrisiPrijavu;
    private javax.swing.JButton btnPrikaziMapu;
    private javax.swing.JButton btnSacuvajPrijavu;
    private javax.swing.JComboBox<Object> cbLokacija;
    private javax.swing.JComboBox<String> cbPol;
    private javax.swing.JComboBox<Object> cbRasa;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblBoja;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblKontaktNalazaca;
    private javax.swing.JLabel lblLokacija;
    private javax.swing.JLabel lblOpis;
    private javax.swing.JLabel lblPol;
    private javax.swing.JLabel lblPrijavaPronalaskaPsaId;
    private javax.swing.JLabel lblPrikazSlike;
    private javax.swing.JLabel lblRasa;
    private javax.swing.JLabel lblSlika;
    private javax.swing.JLabel lblVremePronalaska;
    private javax.swing.JPanel pnPrijavaPronalaskaPsa;
    private javax.swing.JTextField txtBoja;
    private javax.swing.JTextField txtKontaktNalazaca;
    private javax.swing.JTextField txtOpis;
    private javax.swing.JTextField txtPrijavaPronalaskaPsaId;
    private javax.swing.JTextField txtSlika;
    private javax.swing.JTextField txtVremePronalaska;
    // End of variables declaration//GEN-END:variables

    private void primeniMod(EnumModForme mod) {
        switch(mod){
           case EDIT:   
               txtOpis.setEnabled(false);
               //txtSlika.setVisible(true);
               //btnIzaberi.setVisible(true);
               btnIzaberi.setEnabled(true);
               //lblPrikazSlike.setVisible(false);
               btnDodajLokaciju.setEnabled(true);
               btnDodajLokaciju.setVisible(true);
               
               btnPrikaziMapu.setVisible(false);
               btnPrikaziMapu.setEnabled(false);
               
               txtBoja.setEnabled(true);
               txtKontaktNalazaca.setEnabled(true);
               txtSlika.setEnabled(true);
               txtVremePronalaska.setEnabled(true);
               lblPrijavaPronalaskaPsaId.setVisible(true);
               txtPrijavaPronalaskaPsaId.setVisible(true);
               txtPrijavaPronalaskaPsaId.setEnabled(false);     
               cbLokacija.setEnabled(true);
               cbRasa.setEnabled(true);
               cbPol.setEnabled(true);          
               btnIzmeniPrijavu.setVisible(false);
               btnNazad.setVisible(true);
               btnSacuvajPrijavu.setVisible(true);
               btnObrisiPrijavu.setVisible(false);
               break;
           case SHOW:  
               txtOpis.setEnabled(false);
               //txtSlika.setVisible(false);
               //btnIzaberi.setVisible(false);
               btnIzaberi.setEnabled(false);
               //lblPrikazSlike.setVisible(true);
               btnDodajLokaciju.setEnabled(false);
               btnDodajLokaciju.setVisible(false);
               
               btnPrikaziMapu.setVisible(true);
               btnPrikaziMapu.setEnabled(true);
               
               txtBoja.setEnabled(false);
               txtKontaktNalazaca.setEnabled(false);
               txtSlika.setEnabled(false);
               txtVremePronalaska.setEnabled(false);              
               //lblPrijavaPronalaskaPsaId.setVisible(true);
               //txtPrijavaPronalaskaPsaId.setVisible(true);
               txtPrijavaPronalaskaPsaId.setEnabled(false);                        
               cbLokacija.setEnabled(false);
               cbRasa.setEnabled(false);
               cbPol.setEnabled(false);            
               btnIzmeniPrijavu.setVisible(true);
               btnNazad.setVisible(true);
               btnSacuvajPrijavu.setVisible(false);
               btnObrisiPrijavu.setVisible(true);
               break;
           case NEW: 
               txtOpis.setEnabled(false);
               //txtSlika.setVisible(true);
               //btnIzaberi.setVisible(true);
               btnIzaberi.setEnabled(true);
               btnDodajLokaciju.setEnabled(true);
               btnDodajLokaciju.setVisible(true);
               
               btnPrikaziMapu.setVisible(false);
               btnPrikaziMapu.setEnabled(false);
               
               
               //lblPrikazSlike.setVisible(false);
               //lblPrikazSlike.setSize(1, 1);
               
               txtBoja.setEnabled(true);
               txtKontaktNalazaca.setEnabled(true);
               txtSlika.setEnabled(true);
               txtVremePronalaska.setEnabled(true);               
               //lblPrijavaPronalaskaPsaId.setVisible(false);
               //txtPrijavaPronalaskaPsaId.setVisible(false);
               txtPrijavaPronalaskaPsaId.setEnabled(false);               
               cbLokacija.setEnabled(true);
               cbRasa.setEnabled(true);
               cbPol.setEnabled(true);
               btnIzmeniPrijavu.setVisible(false);
               btnNazad.setVisible(true);
               btnSacuvajPrijavu.setVisible(true);
               btnObrisiPrijavu.setVisible(false);
               break;
       }
    }

    public void popuniComboLokacija() {
         try {
            List<Lokacija> listaLokacija=Kontroler.vratiInstancu().ucitajListuLokacija();
            cbLokacija.removeAllItems();
            for(Lokacija l:listaLokacija){
                cbLokacija.addItem(l);
            }
        } catch (Exception ex) {
            Logger.getLogger(FrmPrijavaPronalaska.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void popuniComboRasa() {
         try {
            List<Rasa> listaRasa=Kontroler.vratiInstancu().ucitajListuRasa();
            cbRasa.removeAllItems();
            for(Rasa r:listaRasa){
                cbRasa.addItem(r);
            }
        } catch (Exception ex) {
            Logger.getLogger(FrmPrijavaPronalaska.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    private void popuniComboPol() {
        cbPol.removeAllItems();
        for(EnumPol pol:EnumPol.values()){
            cbPol.addItem(pol.toString());
        }
    }

    private void popuniVrednosti() {
        if(prijavaPronalaskaPsa!=null){
            txtPrijavaPronalaskaPsaId.setText(prijavaPronalaskaPsa.getPrijavaPronalaskaPsaId()+"");
            cbRasa.setSelectedItem(prijavaPronalaskaPsa.getRasa());
            txtBoja.setText(prijavaPronalaskaPsa.getBoja());
            cbPol.setSelectedItem(EnumPol.valueOf(prijavaPronalaskaPsa.getPol().toString()));
            cbLokacija.setSelectedItem(prijavaPronalaskaPsa.getLokacija());
            txtVremePronalaska.setText(Kontroler.vratiInstancu().formatDatumVreme(prijavaPronalaskaPsa.getVremePronalaska()));
            txtSlika.setText(prijavaPronalaskaPsa.getSlikaURL().getDescription());
            
            txtOpis.setText(prijavaPronalaskaPsa.getOpis());
            Kontroler.vratiInstancu().ucitajSliku(prijavaPronalaskaPsa.getSlikaURL().getDescription(), lblPrikazSlike);
            
            
            txtKontaktNalazaca.setText(prijavaPronalaskaPsa.getKontaktNalazaca());
        }
    }

    private ImageIcon sacuvajSliku(String path) throws Exception{
        try {

            ImageIO.write(bi, "jpg", new File (path));
            ImageIcon slika=new ImageIcon(path);
            return slika;
        } catch (IOException ex) {
            Logger.getLogger(FrmPrijavaPronalaska.class.getName()).log(Level.SEVERE, null, ex);
            throw new Exception();
        }
    }

    private String dajPutanju(String path) {
            int indeksZagrade=path.lastIndexOf("/");
            String ime=path.substring(indeksZagrade+1,path.length()-4);
            Timestamp tmp=new Timestamp(new Date().getTime());
            String putanja="/Users/tamara/NetBeansProjects/IzgubljeniNadjeniPsi_server/images/prijave/"+ime+"_"+tmp+".jpg";
            //ImageIO.write(bi, "jpg", new File (putanja));
            return putanja;
    }
    public void promeniPolje(String opis, double x, double y){
        txtOpis.setText(opis);
        this.x=x;
        this.y=y;
    }

}
