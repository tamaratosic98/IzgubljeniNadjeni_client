/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rs.ac.bg.fon.nprog.client.gui;

import rs.ac.bg.fon.nprog.domen.Korisnik;
import rs.ac.bg.fon.nprog.domen.Lokacija;
import rs.ac.bg.fon.nprog.domen.PrijavaPronalaskaPsa;
import java.util.ArrayList;
import java.util.List;
import rs.ac.bg.fon.nprog.domen.Rasa;
import rs.ac.bg.fon.nprog.domen.ZahtevZaTrazenjePsa;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import rs.ac.bg.fon.nprog.client.kontoler.Kontroler;
import rs.ac.bg.fon.nprog.client.modeli.ModelTabelePrijava;
import rs.ac.bg.fon.nprog.client.modeli.ModelTabeleZahtev;

/**
 *
 * @author tamara
 */
public class FrmMain extends javax.swing.JFrame {

    Korisnik ulogovan;
    /**
     * Creates new form FrmMain
     */
    public FrmMain(Korisnik ulogovan) {
        initComponents();
        this.ulogovan=ulogovan;
        srediFormu();
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        pnMain = new javax.swing.JPanel();
        pnFilteri = new javax.swing.JPanel();
        chbRasa = new javax.swing.JCheckBox();
        chbLokacija = new javax.swing.JCheckBox();
        cbRasa = new javax.swing.JComboBox<>();
        cbLokacija = new javax.swing.JComboBox<>();
        lblSlikaLogo = new javax.swing.JLabel();
        lblUlogovan = new javax.swing.JLabel();
        pnZahteviZaTrazenje = new javax.swing.JPanel();
        chbPrimeniFilterZahtevi = new javax.swing.JCheckBox();
        btnDetaljiZahteva = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblZahtevi = new javax.swing.JTable();
        pnPrijavePronalaska = new javax.swing.JPanel();
        chbPrimeniFilterPrijave = new javax.swing.JCheckBox();
        btnDetaljiPrijave = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPrijave = new javax.swing.JTable();
        btnOdjava = new javax.swing.JButton();
        jmbMeni = new javax.swing.JMenuBar();
        jmOpcije = new javax.swing.JMenu();
        jmUnos = new javax.swing.JMenu();
        jmiUnosZahtevaZaTrazenje = new javax.swing.JMenuItem();
        jmiUnosPrijavePronalaska = new javax.swing.JMenuItem();
        jmiUnosPronalaska = new javax.swing.JMenuItem();
        jmPretraga = new javax.swing.JMenu();
        jmiPretragaZahtevaZaTrazenje = new javax.swing.JMenuItem();
        jmiPretragaPrijavaPronalaska = new javax.swing.JMenuItem();
        jmiPretragaPronalazaka = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));

        pnMain.setBackground(new java.awt.Color(153, 153, 153));

        pnFilteri.setBackground(new java.awt.Color(153, 153, 153));
        pnFilteri.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filteri", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        chbRasa.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        chbRasa.setForeground(new java.awt.Color(255, 255, 255));
        chbRasa.setText("Rasa");
        chbRasa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbRasaActionPerformed(evt);
            }
        });

        chbLokacija.setBackground(new java.awt.Color(255, 255, 255));
        chbLokacija.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        chbLokacija.setForeground(new java.awt.Color(255, 255, 255));
        chbLokacija.setText("Lokacija");
        chbLokacija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbLokacijaActionPerformed(evt);
            }
        });

        cbRasa.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        cbRasa.setModel(new javax.swing.DefaultComboBoxModel<>());
//        cbRasa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbRasa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRasaActionPerformed(evt);
            }
        });

        cbLokacija.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        cbLokacija.setModel(new javax.swing.DefaultComboBoxModel<>());
//        cbLokacija.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbLokacija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbLokacijaActionPerformed(evt);
            }
        });

        lblSlikaLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rs/ac/bg/fon/nprog/img/logo.png"))); // NOI18N

        lblUlogovan.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblUlogovan.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout pnFilteriLayout = new javax.swing.GroupLayout(pnFilteri);
        pnFilteri.setLayout(pnFilteriLayout);
        pnFilteriLayout.setHorizontalGroup(
            pnFilteriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnFilteriLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSlikaLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnFilteriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnFilteriLayout.createSequentialGroup()
                        .addGroup(pnFilteriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chbRasa)
                            .addComponent(chbLokacija))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnFilteriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbRasa, 0, 192, Short.MAX_VALUE)
                            .addComponent(cbLokacija, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(28, 28, 28))
                    .addGroup(pnFilteriLayout.createSequentialGroup()
                        .addComponent(lblUlogovan, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(46, Short.MAX_VALUE))))
        );
        pnFilteriLayout.setVerticalGroup(
            pnFilteriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnFilteriLayout.createSequentialGroup()
                .addGroup(pnFilteriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnFilteriLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblSlikaLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnFilteriLayout.createSequentialGroup()
                        .addComponent(lblUlogovan, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(pnFilteriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbRasa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chbRasa))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnFilteriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbLokacija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chbLokacija))))
                .addContainerGap())
        );

        pnZahteviZaTrazenje.setBackground(new java.awt.Color(153, 153, 153));
        pnZahteviZaTrazenje.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Zahtevi za trazenje", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        chbPrimeniFilterZahtevi.setBackground(new java.awt.Color(255, 255, 255));
        chbPrimeniFilterZahtevi.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        chbPrimeniFilterZahtevi.setForeground(new java.awt.Color(255, 255, 255));
        chbPrimeniFilterZahtevi.setText("Primeni filter");
        chbPrimeniFilterZahtevi.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chbPrimeniFilterZahteviStateChanged(evt);
            }
        });
        chbPrimeniFilterZahtevi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbPrimeniFilterZahteviActionPerformed(evt);
            }
        });

        btnDetaljiZahteva.setBackground(new java.awt.Color(204, 204, 204));
        btnDetaljiZahteva.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnDetaljiZahteva.setForeground(new java.awt.Color(102, 102, 102));
        btnDetaljiZahteva.setText("Detalji");
        btnDetaljiZahteva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetaljiZahtevaActionPerformed(evt);
            }
        });

        tblZahtevi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblZahtevi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblZahteviFocusGained(evt);
            }
        });
        jScrollPane2.setViewportView(tblZahtevi);

        javax.swing.GroupLayout pnZahteviZaTrazenjeLayout = new javax.swing.GroupLayout(pnZahteviZaTrazenje);
        pnZahteviZaTrazenje.setLayout(pnZahteviZaTrazenjeLayout);
        pnZahteviZaTrazenjeLayout.setHorizontalGroup(
            pnZahteviZaTrazenjeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnZahteviZaTrazenjeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnZahteviZaTrazenjeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnZahteviZaTrazenjeLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnDetaljiZahteva, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnZahteviZaTrazenjeLayout.createSequentialGroup()
                        .addComponent(chbPrimeniFilterZahtevi)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnZahteviZaTrazenjeLayout.setVerticalGroup(
            pnZahteviZaTrazenjeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnZahteviZaTrazenjeLayout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addComponent(chbPrimeniFilterZahtevi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDetaljiZahteva, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnPrijavePronalaska.setBackground(new java.awt.Color(153, 153, 153));
        pnPrijavePronalaska.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Prijave pronalaska", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        chbPrimeniFilterPrijave.setBackground(new java.awt.Color(255, 255, 255));
        chbPrimeniFilterPrijave.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        chbPrimeniFilterPrijave.setForeground(new java.awt.Color(255, 255, 255));
        chbPrimeniFilterPrijave.setText("Primeni filter");
        chbPrimeniFilterPrijave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbPrimeniFilterPrijaveActionPerformed(evt);
            }
        });

        btnDetaljiPrijave.setBackground(new java.awt.Color(204, 204, 204));
        btnDetaljiPrijave.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnDetaljiPrijave.setForeground(new java.awt.Color(102, 102, 102));
        btnDetaljiPrijave.setText("Detalji");
        btnDetaljiPrijave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetaljiPrijaveActionPerformed(evt);
            }
        });

        tblPrijave.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPrijave.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblPrijaveFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(tblPrijave);

        javax.swing.GroupLayout pnPrijavePronalaskaLayout = new javax.swing.GroupLayout(pnPrijavePronalaska);
        pnPrijavePronalaska.setLayout(pnPrijavePronalaskaLayout);
        pnPrijavePronalaskaLayout.setHorizontalGroup(
            pnPrijavePronalaskaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPrijavePronalaskaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnPrijavePronalaskaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPrijavePronalaskaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnDetaljiPrijave, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnPrijavePronalaskaLayout.createSequentialGroup()
                        .addComponent(chbPrimeniFilterPrijave)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnPrijavePronalaskaLayout.setVerticalGroup(
            pnPrijavePronalaskaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPrijavePronalaskaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chbPrimeniFilterPrijave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDetaljiPrijave, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnOdjava.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnOdjava.setForeground(new java.awt.Color(102, 102, 102));
        btnOdjava.setText("Odjava");
        btnOdjava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOdjavaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnMainLayout = new javax.swing.GroupLayout(pnMain);
        pnMain.setLayout(pnMainLayout);
        pnMainLayout.setHorizontalGroup(
            pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnZahteviZaTrazenje, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnFilteri, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnPrijavePronalaska, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnMainLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnOdjava, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        pnMainLayout.setVerticalGroup(
            pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnFilteri, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnZahteviZaTrazenje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnPrijavePronalaska, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOdjava, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        jmbMeni.setBackground(new java.awt.Color(153, 153, 153));

        jmOpcije.setText("Opcije");
        jmOpcije.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        jmUnos.setText("Unos");
        jmUnos.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        jmiUnosZahtevaZaTrazenje.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jmiUnosZahtevaZaTrazenje.setText("Zahtev za traženje psa");
        jmiUnosZahtevaZaTrazenje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiUnosZahtevaZaTrazenjeActionPerformed(evt);
            }
        });
        jmUnos.add(jmiUnosZahtevaZaTrazenje);

        jmiUnosPrijavePronalaska.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jmiUnosPrijavePronalaska.setText("Prijava pronalaska psa");
        jmiUnosPrijavePronalaska.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiUnosPrijavePronalaskaActionPerformed(evt);
            }
        });
        jmUnos.add(jmiUnosPrijavePronalaska);

        jmiUnosPronalaska.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jmiUnosPronalaska.setText("Pronalazak");
        jmiUnosPronalaska.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiUnosPronalaskaActionPerformed(evt);
            }
        });
        jmUnos.add(jmiUnosPronalaska);

        jmOpcije.add(jmUnos);

        jmPretraga.setText("Pretraga");
        jmPretraga.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        jmiPretragaZahtevaZaTrazenje.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jmiPretragaZahtevaZaTrazenje.setText("Zahtev za trazenje psa");
        jmiPretragaZahtevaZaTrazenje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiPretragaZahtevaZaTrazenjeActionPerformed(evt);
            }
        });
        jmPretraga.add(jmiPretragaZahtevaZaTrazenje);

        jmiPretragaPrijavaPronalaska.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jmiPretragaPrijavaPronalaska.setText("Prijava pronalaska psa");
        jmiPretragaPrijavaPronalaska.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiPretragaPrijavaPronalaskaActionPerformed(evt);
            }
        });
        jmPretraga.add(jmiPretragaPrijavaPronalaska);

        jmiPretragaPronalazaka.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jmiPretragaPronalazaka.setText("Pronalazak");
        jmiPretragaPronalazaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiPretragaPronalazakaActionPerformed(evt);
            }
        });
        jmPretraga.add(jmiPretragaPronalazaka);

        jmOpcije.add(jmPretraga);

        jmbMeni.add(jmOpcije);

        setJMenuBar(jmbMeni);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmiUnosZahtevaZaTrazenjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiUnosZahtevaZaTrazenjeActionPerformed
        // TODO add your handling code here:
        new FrmZahtevZaTrazenje(this, false, EnumModForme.NEW, null, this, ulogovan).setVisible(true);
    }//GEN-LAST:event_jmiUnosZahtevaZaTrazenjeActionPerformed

    private void chbRasaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbRasaActionPerformed
        // TODO add your handling code here:
        if(chbPrimeniFilterZahtevi.isSelected()){
            primeniFilterZahtevi();
        }
         if(chbPrimeniFilterPrijave.isSelected()){
            primeniFilterPrijave();
        }
    }//GEN-LAST:event_chbRasaActionPerformed

    private void cbLokacijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbLokacijaActionPerformed
        // TODO add your handling code here:
         if(chbPrimeniFilterZahtevi.isSelected()){
            primeniFilterZahtevi();
        }
          if(chbPrimeniFilterPrijave.isSelected()){
            primeniFilterPrijave();
        }
    }//GEN-LAST:event_cbLokacijaActionPerformed

    private void jmiPretragaZahtevaZaTrazenjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiPretragaZahtevaZaTrazenjeActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Pretraga zahteva za trazenje psa vrši se na glavnoj formi, primenom određenih filtera.");
    }//GEN-LAST:event_jmiPretragaZahtevaZaTrazenjeActionPerformed

    private void jmiPretragaPrijavaPronalaskaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiPretragaPrijavaPronalaskaActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Pretraga prijava pronalaska psa vrši se na glavnoj formi, primenom određenih filtera.");
    }//GEN-LAST:event_jmiPretragaPrijavaPronalaskaActionPerformed

    private void jmiUnosPrijavePronalaskaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiUnosPrijavePronalaskaActionPerformed
        // TODO add your handling code here:
           new FrmPrijavaPronalaska(this, false, EnumModForme.NEW,null,this, ulogovan).setVisible(true);
    }//GEN-LAST:event_jmiUnosPrijavePronalaskaActionPerformed

    private void jmiUnosPronalaskaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiUnosPronalaskaActionPerformed
        // TODO add your handling code here:
           new FrmPronalazak(this, true, EnumModForme.NEW, null, null).setVisible(true);
    }//GEN-LAST:event_jmiUnosPronalaskaActionPerformed

    private void jmiPretragaPronalazakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiPretragaPronalazakaActionPerformed
        // TODO add your handling code here:
        new FrmPretragaPronalazaka().setVisible(true);
    }//GEN-LAST:event_jmiPretragaPronalazakaActionPerformed

    private void btnDetaljiZahtevaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetaljiZahtevaActionPerformed
        // TODO add your handling code here:
        int index=tblZahtevi.getSelectedRow();
        if(index>=0){ 
            ModelTabeleZahtev mtz=(ModelTabeleZahtev) tblZahtevi.getModel();
            ZahtevZaTrazenjePsa zahtevZaTrazenjePsa;
            try {
                zahtevZaTrazenjePsa = Kontroler.vratiInstancu().ucitajZahtevZaTrazenjePsa(mtz.getLista().get(index));
                new FrmZahtevZaTrazenje(this, false, EnumModForme.SHOW, zahtevZaTrazenjePsa,this, ulogovan).setVisible(true);
               
            } catch (Exception ex) {
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Sistem ne može da učita zahtev za traženje psa. ", "Greška", JOptionPane.ERROR_MESSAGE);
        }
   
        
    }//GEN-LAST:event_btnDetaljiZahtevaActionPerformed

    private void btnDetaljiPrijaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetaljiPrijaveActionPerformed
        // TODO add your handling code here:
        int index=tblPrijave.getSelectedRow();
        if(index>=0){ 
            ModelTabelePrijava mtp=(ModelTabelePrijava) tblPrijave.getModel();
            PrijavaPronalaskaPsa prijavaPronalaskaPsa;
            try {
                prijavaPronalaskaPsa = Kontroler.vratiInstancu().ucitajPrijavuPronalaskaPsa(mtp.getLista().get(index));
               
                new FrmPrijavaPronalaska(this, false, EnumModForme.SHOW, prijavaPronalaskaPsa,this, ulogovan).setVisible(true);
                
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
            }
           
        }else{
             JOptionPane.showMessageDialog(this, "Sistem ne može da učita prijavu pronalaska psa. ", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDetaljiPrijaveActionPerformed

    private void chbPrimeniFilterZahteviActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbPrimeniFilterZahteviActionPerformed
        // TODO add your handling code here:
       if(chbPrimeniFilterZahtevi.isSelected()){
            primeniFilterZahtevi();
        }else{
           try {
               //ZahtevZaTrazenjePsa zahtevZaTrazenjePsa=new ZahtevZaTrazenjePsa();
                ModelTabeleZahtev mtz=(ModelTabeleZahtev) tblZahtevi.getModel();
                mtz.osvezi(Kontroler.vratiInstancu().ucitajListuZahtevaZaTrazenjePsa());
            } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
            }
       }
       
    }//GEN-LAST:event_chbPrimeniFilterZahteviActionPerformed

    private void chbPrimeniFilterPrijaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbPrimeniFilterPrijaveActionPerformed
        // TODO add your handling code here:
        if(chbPrimeniFilterPrijave.isSelected()){
            primeniFilterPrijave();
        }else{
           try {
                //PrijavaPronalaskaPsa prijavaPronalaskaPsa=new PrijavaPronalaskaPsa();
                ModelTabelePrijava mtp=(ModelTabelePrijava) tblPrijave.getModel();
                mtp.osvezi(Kontroler.vratiInstancu().ucitajListuPrijavaPronalaskaPsa());
            } catch (Exception ex) {
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
            }
       }
        
    }//GEN-LAST:event_chbPrimeniFilterPrijaveActionPerformed

    private void cbRasaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRasaActionPerformed
        // TODO add your handling code here:
         if(chbPrimeniFilterZahtevi.isSelected()){
            primeniFilterZahtevi();
        }
         if(chbPrimeniFilterPrijave.isSelected()){
            primeniFilterPrijave();
        }
    }//GEN-LAST:event_cbRasaActionPerformed

    private void chbLokacijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbLokacijaActionPerformed
        // TODO add your handling code here:
         if(chbPrimeniFilterZahtevi.isSelected()){
            primeniFilterZahtevi();
        }
          if(chbPrimeniFilterPrijave.isSelected()){
            primeniFilterPrijave();
        }
    }//GEN-LAST:event_chbLokacijaActionPerformed

    private void chbPrimeniFilterZahteviStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chbPrimeniFilterZahteviStateChanged

    }//GEN-LAST:event_chbPrimeniFilterZahteviStateChanged

    private void tblZahteviFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblZahteviFocusGained
        // TODO add your handling code here:
       // osveziListe();  
    }//GEN-LAST:event_tblZahteviFocusGained

    private void tblPrijaveFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblPrijaveFocusGained
        // TODO add your handling code here:
       // osveziListe();  
    }//GEN-LAST:event_tblPrijaveFocusGained

    private void btnOdjavaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOdjavaActionPerformed
        // TODO add your handling code here:
        Korisnik korisnik;
        try {
            korisnik = Kontroler.vratiInstancu().odjaviKorisnika(ulogovan);
            this.dispose();
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnOdjavaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDetaljiPrijave;
    private javax.swing.JButton btnDetaljiZahteva;
    private javax.swing.JButton btnOdjava;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<Object> cbLokacija;
    private javax.swing.JComboBox<Object> cbRasa;
    private javax.swing.JCheckBox chbLokacija;
    private javax.swing.JCheckBox chbPrimeniFilterPrijave;
    private javax.swing.JCheckBox chbPrimeniFilterZahtevi;
    private javax.swing.JCheckBox chbRasa;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenu jmOpcije;
    private javax.swing.JMenu jmPretraga;
    private javax.swing.JMenu jmUnos;
    private javax.swing.JMenuBar jmbMeni;
    private javax.swing.JMenuItem jmiPretragaPrijavaPronalaska;
    private javax.swing.JMenuItem jmiPretragaPronalazaka;
    private javax.swing.JMenuItem jmiPretragaZahtevaZaTrazenje;
    private javax.swing.JMenuItem jmiUnosPrijavePronalaska;
    private javax.swing.JMenuItem jmiUnosPronalaska;
    private javax.swing.JMenuItem jmiUnosZahtevaZaTrazenje;
    private javax.swing.JLabel lblSlikaLogo;
    private javax.swing.JLabel lblUlogovan;
    private javax.swing.JPanel pnFilteri;
    private javax.swing.JPanel pnMain;
    private javax.swing.JPanel pnPrijavePronalaska;
    private javax.swing.JPanel pnZahteviZaTrazenje;
    private javax.swing.JTable tblPrijave;
    private javax.swing.JTable tblZahtevi;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        if(ulogovan!=null){
            lblUlogovan.setText("Dobrodošli "+ulogovan.getIme()+" "+ulogovan.getPrezime()+" !");
            this.setTitle("Izgubljeni i pronađeni psi");
            tblPrijave.setModel(new ModelTabelePrijava(new ArrayList<PrijavaPronalaskaPsa>()));
            tblZahtevi.setModel(new ModelTabeleZahtev(new ArrayList<ZahtevZaTrazenjePsa>()));

            popuniComboLokacija();
            popuniComboRasa();
            popuniTabeluPrijava();
            popuniTabeluZahteva();
        }
    }

    private void popuniComboRasa() {
        try {
            List<Rasa> listaRasa=Kontroler.vratiInstancu().ucitajListuRasa();
            cbRasa.removeAllItems();
            for(Rasa r:listaRasa){
                cbRasa.addItem(r);
            }
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void popuniComboLokacija() {
        try {
            List<Lokacija> listaLokacija=Kontroler.vratiInstancu().ucitajListuLokacija();
            cbLokacija.removeAllItems();
            for(Lokacija l:listaLokacija){
                cbLokacija.addItem(l);
            }
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void popuniTabeluPrijava() {
        try {
            List<PrijavaPronalaskaPsa> listaPrijava=Kontroler.vratiInstancu().ucitajListuPrijavaPronalaskaPsa();
            ModelTabelePrijava mtp=new ModelTabelePrijava(listaPrijava);
            tblPrijave.setModel(mtp);
            mtp.fireTableDataChanged();
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void popuniTabeluZahteva() {
        try {
            List<ZahtevZaTrazenjePsa> listaZahteva=Kontroler.vratiInstancu().ucitajListuZahtevaZaTrazenjePsa();
            ModelTabeleZahtev mtz=new ModelTabeleZahtev(listaZahteva);
            tblZahtevi.setModel(mtz);
            mtz.fireTableDataChanged();
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void primeniFilterZahtevi() {
        ZahtevZaTrazenjePsa zahtevZaTrazenjePsa=new ZahtevZaTrazenjePsa();
        ModelTabeleZahtev mtz=(ModelTabeleZahtev) tblZahtevi.getModel();
        
        if(chbLokacija.isSelected() && chbRasa.isSelected()){
            try {
                zahtevZaTrazenjePsa.setLokacija((Lokacija) cbLokacija.getSelectedItem());
                zahtevZaTrazenjePsa.setRasa((Rasa) cbRasa.getSelectedItem());
                List<ZahtevZaTrazenjePsa> lista=Kontroler.vratiInstancu().nadjiZahteveZaTrazenjePsa(zahtevZaTrazenjePsa);
                mtz.osvezi(lista);
                return;
            } catch (Exception ex) {
                mtz.osvezi(new ArrayList<ZahtevZaTrazenjePsa>());
                 JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }
        }
        if(chbRasa.isSelected()){
            try {
                zahtevZaTrazenjePsa.setRasa((Rasa) cbRasa.getSelectedItem());
                mtz.osvezi(Kontroler.vratiInstancu().nadjiZahteveZaTrazenjePsa(zahtevZaTrazenjePsa));
            } catch (Exception ex) { 
                mtz.osvezi(new ArrayList<ZahtevZaTrazenjePsa>());
                 JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }
        }if(chbLokacija.isSelected()){
            try {
                zahtevZaTrazenjePsa.setLokacija((Lokacija) cbLokacija.getSelectedItem());
                mtz.osvezi(Kontroler.vratiInstancu().nadjiZahteveZaTrazenjePsa(zahtevZaTrazenjePsa));
            } catch (Exception ex) {
                mtz.osvezi(new ArrayList<ZahtevZaTrazenjePsa>());
                 JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }
        }

    }

    private void primeniFilterPrijave() {
        PrijavaPronalaskaPsa prijavaPronalaskaPsa=new PrijavaPronalaskaPsa();
        ModelTabelePrijava mtp=(ModelTabelePrijava) tblPrijave.getModel();
        
        if(chbLokacija.isSelected() && chbRasa.isSelected()){
            try {
                prijavaPronalaskaPsa.setLokacija((Lokacija) cbLokacija.getSelectedItem());
                prijavaPronalaskaPsa.setRasa((Rasa) cbRasa.getSelectedItem());
                List<PrijavaPronalaskaPsa> lista=Kontroler.vratiInstancu().nadjiPrijavePronalaskaPsa(prijavaPronalaskaPsa);
                mtp.osvezi(lista);
                return;
            } catch (Exception ex) {
                mtp.osvezi(new ArrayList<PrijavaPronalaskaPsa>());
                 JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }
        }
        if(chbRasa.isSelected()){
            try {
                prijavaPronalaskaPsa.setRasa((Rasa) cbRasa.getSelectedItem());
                mtp.osvezi(Kontroler.vratiInstancu().nadjiPrijavePronalaskaPsa(prijavaPronalaskaPsa));
            } catch (Exception ex) {
                mtp.osvezi(new ArrayList<PrijavaPronalaskaPsa>());
                 JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }
        }if(chbLokacija.isSelected()){
            try {
                prijavaPronalaskaPsa.setLokacija((Lokacija) cbLokacija.getSelectedItem());
                mtp.osvezi(Kontroler.vratiInstancu().nadjiPrijavePronalaskaPsa(prijavaPronalaskaPsa));
            } catch (Exception ex) {
                mtp.osvezi(new ArrayList<PrijavaPronalaskaPsa>());
                 JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }
        }
    }
    
    public void osveziListe(){
        try {
            ModelTabelePrijava mtp=(ModelTabelePrijava) tblPrijave.getModel();
            ModelTabeleZahtev mtz=(ModelTabeleZahtev) tblZahtevi.getModel();
            mtp.osvezi(Kontroler.vratiInstancu().ucitajListuPrijavaPronalaskaPsa());
            mtz.osvezi(Kontroler.vratiInstancu().ucitajListuZahtevaZaTrazenjePsa());
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
   
}
