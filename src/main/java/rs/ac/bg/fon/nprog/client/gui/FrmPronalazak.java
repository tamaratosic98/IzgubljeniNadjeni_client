/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rs.ac.bg.fon.nprog.client.gui;

import rs.ac.bg.fon.nprog.domen.Lokacija;
import rs.ac.bg.fon.nprog.domen.PrijavaPronalaskaPsa;
import rs.ac.bg.fon.nprog.domen.Pronalazak;
import rs.ac.bg.fon.nprog.domen.Rasa;
import rs.ac.bg.fon.nprog.domen.ZahtevZaTrazenjePsa;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import rs.ac.bg.fon.nprog.client.kontoler.Kontroler;
import rs.ac.bg.fon.nprog.client.modeli.ModelTabelePrijava;
import rs.ac.bg.fon.nprog.client.modeli.ModelTabelePronalazak;
import rs.ac.bg.fon.nprog.client.modeli.ModelTabeleZahtev;

/**
 *
 * @author tamara
 */
public class FrmPronalazak extends javax.swing.JDialog {
    EnumModForme mod;
    Pronalazak pronalazak;
    FrmPretragaPronalazaka formaPretrage;
    ZahtevZaTrazenjePsa zahtev;
    PrijavaPronalaskaPsa prijava;
    /**
     * Creates new form frmPronalazak
     */
    public FrmPronalazak(java.awt.Frame parent, boolean modal, EnumModForme mod,Pronalazak pronalazak, FrmPretragaPronalazaka formaPretrage ) {
        super(parent, modal);
        initComponents();
        this.formaPretrage=formaPretrage;
        this.pronalazak=pronalazak;
        this.mod=mod;
        primeniMod(mod);
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnPronalazak = new javax.swing.JPanel();
        btnNazad = new javax.swing.JButton();
        btnSacuvajPronalazak = new javax.swing.JButton();
        txtDatumResavanjaSlucaja = new javax.swing.JTextField();
        lblDatumResavanjaSlucaja = new javax.swing.JLabel();
        lblNapomena = new javax.swing.JLabel();
        txtNapomena = new javax.swing.JTextField();
        lblErrorDatumResavanjaSlucaja = new javax.swing.JLabel();
        pnZahtevi = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblZahtevi = new javax.swing.JTable();
        chbPrimeniFilterZahtevi = new javax.swing.JCheckBox();
        lblIzabranZahtev = new javax.swing.JLabel();
        txtIzabranZahtev = new javax.swing.JTextField();
        btnIzaberiZahtev = new javax.swing.JButton();
        pnPrijave = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPrijave = new javax.swing.JTable();
        chbPrimeniFilterPrijave = new javax.swing.JCheckBox();
        lblIzabranaPrijava = new javax.swing.JLabel();
        txtIzabranaPrijava = new javax.swing.JTextField();
        btnIzaberiPrijavu = new javax.swing.JButton();
        btnDodaj = new javax.swing.JButton();
        pnFilteri = new javax.swing.JPanel();
        chbRasa = new javax.swing.JCheckBox();
        chbLokacija = new javax.swing.JCheckBox();
        cbRasa = new javax.swing.JComboBox<>();
        cbLokacija = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnIzmeniPronalazak = new javax.swing.JButton();
        pnPronalasci = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblPronalazak = new javax.swing.JTable();
        btnIzbaci = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pronalazak");

        pnPronalazak.setBackground(new java.awt.Color(153, 153, 153));
        pnPronalazak.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pronalazak", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        btnNazad.setBackground(new java.awt.Color(204, 204, 204));
        btnNazad.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnNazad.setForeground(new java.awt.Color(102, 102, 102));
        btnNazad.setText("Nazad");
        btnNazad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNazadActionPerformed(evt);
            }
        });

        btnSacuvajPronalazak.setBackground(new java.awt.Color(204, 204, 204));
        btnSacuvajPronalazak.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnSacuvajPronalazak.setForeground(new java.awt.Color(102, 102, 102));
        btnSacuvajPronalazak.setText("Sačuvaj");
        btnSacuvajPronalazak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajPronalazakActionPerformed(evt);
            }
        });

        txtDatumResavanjaSlucaja.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtDatumResavanjaSlucaja.setForeground(new java.awt.Color(102, 102, 102));

        lblDatumResavanjaSlucaja.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblDatumResavanjaSlucaja.setForeground(new java.awt.Color(255, 255, 255));
        lblDatumResavanjaSlucaja.setText("Datum rešavanja slučaja:");

        lblNapomena.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblNapomena.setForeground(new java.awt.Color(255, 255, 255));
        lblNapomena.setText("Napomena:");

        txtNapomena.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtNapomena.setForeground(new java.awt.Color(102, 102, 102));

        lblErrorDatumResavanjaSlucaja.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblErrorDatumResavanjaSlucaja.setForeground(new java.awt.Color(255, 0, 0));

        pnZahtevi.setBackground(new java.awt.Color(153, 153, 153));
        pnZahtevi.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Zahtev za traženje", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        tblZahtevi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblZahtevi);

        chbPrimeniFilterZahtevi.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        chbPrimeniFilterZahtevi.setForeground(new java.awt.Color(255, 255, 255));
        chbPrimeniFilterZahtevi.setText("Primeni filter");
        chbPrimeniFilterZahtevi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbPrimeniFilterZahteviActionPerformed(evt);
            }
        });

        lblIzabranZahtev.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblIzabranZahtev.setForeground(new java.awt.Color(255, 255, 255));
        lblIzabranZahtev.setText("Izabran:");

        txtIzabranZahtev.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtIzabranZahtev.setForeground(new java.awt.Color(102, 102, 102));

        btnIzaberiZahtev.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnIzaberiZahtev.setForeground(new java.awt.Color(102, 102, 102));
        btnIzaberiZahtev.setText("Izaberi");
        btnIzaberiZahtev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzaberiZahtevActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnZahteviLayout = new javax.swing.GroupLayout(pnZahtevi);
        pnZahtevi.setLayout(pnZahteviLayout);
        pnZahteviLayout.setHorizontalGroup(
            pnZahteviLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnZahteviLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnZahteviLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnZahteviLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnZahteviLayout.createSequentialGroup()
                            .addGroup(pnZahteviLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(chbPrimeniFilterZahtevi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblIzabranZahtev, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtIzabranZahtev, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnIzaberiZahtev, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnZahteviLayout.setVerticalGroup(
            pnZahteviLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnZahteviLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnZahteviLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIzabranZahtev)
                    .addComponent(txtIzabranZahtev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chbPrimeniFilterZahtevi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(btnIzaberiZahtev, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnPrijave.setBackground(new java.awt.Color(153, 153, 153));
        pnPrijave.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Prijave pronalaska", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        tblPrijave.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tblPrijave);

        chbPrimeniFilterPrijave.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        chbPrimeniFilterPrijave.setForeground(new java.awt.Color(255, 255, 255));
        chbPrimeniFilterPrijave.setText("Primeni filter");
        chbPrimeniFilterPrijave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbPrimeniFilterPrijaveActionPerformed(evt);
            }
        });

        lblIzabranaPrijava.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblIzabranaPrijava.setForeground(new java.awt.Color(255, 255, 255));
        lblIzabranaPrijava.setText("Izabrana:");

        txtIzabranaPrijava.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtIzabranaPrijava.setForeground(new java.awt.Color(102, 102, 102));

        btnIzaberiPrijavu.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnIzaberiPrijavu.setForeground(new java.awt.Color(102, 102, 102));
        btnIzaberiPrijavu.setText("Izaberi");
        btnIzaberiPrijavu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzaberiPrijavuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnPrijaveLayout = new javax.swing.GroupLayout(pnPrijave);
        pnPrijave.setLayout(pnPrijaveLayout);
        pnPrijaveLayout.setHorizontalGroup(
            pnPrijaveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPrijaveLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnPrijaveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnPrijaveLayout.createSequentialGroup()
                        .addComponent(chbPrimeniFilterPrijave)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnPrijaveLayout.createSequentialGroup()
                        .addComponent(lblIzabranaPrijava, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(37, 37, 37)
                        .addComponent(txtIzabranaPrijava, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnIzaberiPrijavu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        pnPrijaveLayout.setVerticalGroup(
            pnPrijaveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPrijaveLayout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addGroup(pnPrijaveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIzabranaPrijava)
                    .addComponent(txtIzabranaPrijava, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(chbPrimeniFilterPrijave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnIzaberiPrijavu, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnDodaj.setBackground(new java.awt.Color(102, 102, 102));
        btnDodaj.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnDodaj.setForeground(new java.awt.Color(102, 102, 102));
        btnDodaj.setText("Dodaj pronalazak");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        pnFilteri.setBackground(new java.awt.Color(153, 153, 153));
        pnFilteri.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filteri ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        chbRasa.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        chbRasa.setForeground(new java.awt.Color(255, 255, 255));
        chbRasa.setText("Rasa");
        chbRasa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbRasaActionPerformed(evt);
            }
        });

        chbLokacija.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        chbLokacija.setForeground(new java.awt.Color(255, 255, 255));
        chbLokacija.setText("Lokacija");
        chbLokacija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbLokacijaActionPerformed(evt);
            }
        });

        cbRasa.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        cbRasa.setForeground(new java.awt.Color(102, 102, 102));
//        cbRasa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbLokacija.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        cbLokacija.setForeground(new java.awt.Color(102, 102, 102));
//        cbLokacija.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rs/ac/bg/fon/nprog/img/logo.png"))); // NOI18N

        btnIzmeniPronalazak.setBackground(new java.awt.Color(204, 204, 204));
        btnIzmeniPronalazak.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnIzmeniPronalazak.setForeground(new java.awt.Color(102, 102, 102));
        btnIzmeniPronalazak.setText("Izmeni pronalazak");
        btnIzmeniPronalazak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniPronalazakActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnFilteriLayout = new javax.swing.GroupLayout(pnFilteri);
        pnFilteri.setLayout(pnFilteriLayout);
        pnFilteriLayout.setHorizontalGroup(
            pnFilteriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnFilteriLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81)
                .addGroup(pnFilteriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnFilteriLayout.createSequentialGroup()
                        .addComponent(chbLokacija)
                        .addGap(118, 118, 118)
                        .addComponent(cbLokacija, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnFilteriLayout.createSequentialGroup()
                        .addComponent(chbRasa)
                        .addGap(149, 149, 149)
                        .addComponent(cbRasa, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnIzmeniPronalazak, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115))
        );
        pnFilteriLayout.setVerticalGroup(
            pnFilteriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnFilteriLayout.createSequentialGroup()
                .addGroup(pnFilteriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnFilteriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnFilteriLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(pnFilteriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(chbRasa)
                                .addComponent(cbRasa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(12, 12, 12)
                            .addGroup(pnFilteriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(chbLokacija)
                                .addComponent(cbLokacija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnFilteriLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(btnIzmeniPronalazak, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnPronalasci.setBackground(new java.awt.Color(153, 153, 153));
        pnPronalasci.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dodati pronalasci", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        tblPronalazak.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tblPronalazak);

        btnIzbaci.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnIzbaci.setForeground(new java.awt.Color(102, 102, 102));
        btnIzbaci.setText("Izbaci");
        btnIzbaci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzbaciActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnPronalasciLayout = new javax.swing.GroupLayout(pnPronalasci);
        pnPronalasci.setLayout(pnPronalasciLayout);
        pnPronalasciLayout.setHorizontalGroup(
            pnPronalasciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPronalasciLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnPronalasciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPronalasciLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnIzbaci, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnPronalasciLayout.setVerticalGroup(
            pnPronalasciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPronalasciLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnIzbaci, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rs/ac/bg/fon/nprog/img/Footer-Banner.png"))); // NOI18N

        javax.swing.GroupLayout pnPronalazakLayout = new javax.swing.GroupLayout(pnPronalazak);
        pnPronalazak.setLayout(pnPronalazakLayout);
        pnPronalazakLayout.setHorizontalGroup(
            pnPronalazakLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPronalazakLayout.createSequentialGroup()
                .addGroup(pnPronalazakLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnFilteri, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnPronalasci, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnPronalazakLayout.createSequentialGroup()
                        .addGroup(pnPronalazakLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnPronalazakLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(pnPronalazakLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnPronalazakLayout.createSequentialGroup()
                                        .addComponent(lblDatumResavanjaSlucaja)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtDatumResavanjaSlucaja, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPronalazakLayout.createSequentialGroup()
                                        .addComponent(lblNapomena, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(pnPronalazakLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnDodaj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtNapomena, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)))))
                            .addComponent(pnZahtevi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnPronalazakLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnPrijave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPronalazakLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)))))
                .addGap(0, 0, 0)
                .addComponent(lblErrorDatumResavanjaSlucaja, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnPronalazakLayout.createSequentialGroup()
                .addGap(291, 291, 291)
                .addComponent(btnSacuvajPronalazak, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNazad, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnPronalazakLayout.setVerticalGroup(
            pnPronalazakLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPronalazakLayout.createSequentialGroup()
                .addGroup(pnPronalazakLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnPronalazakLayout.createSequentialGroup()
                        .addGap(566, 566, 566)
                        .addComponent(lblErrorDatumResavanjaSlucaja, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnPronalazakLayout.createSequentialGroup()
                        .addComponent(pnFilteri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnPronalazakLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnPrijave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnZahtevi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnPronalazakLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnPronalazakLayout.createSequentialGroup()
                                .addGroup(pnPronalazakLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblDatumResavanjaSlucaja)
                                    .addComponent(txtDatumResavanjaSlucaja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnPronalazakLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtNapomena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNapomena))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnPronalasci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnPronalazakLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSacuvajPronalazak, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNazad, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnPronalazak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnPronalazak, javax.swing.GroupLayout.PREFERRED_SIZE, 756, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIzbaciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzbaciActionPerformed
        // TODO add your handling code here:
        ModelTabelePronalazak mtpr=(ModelTabelePronalazak) tblPronalazak.getModel();
        int index=tblPronalazak.getSelectedRow();
        if(index>=0){
            mtpr.remove(index);
        }
    }//GEN-LAST:event_btnIzbaciActionPerformed

    private void chbLokacijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbLokacijaActionPerformed
        // TODO add your handling code here:
        if(chbPrimeniFilterZahtevi.isSelected()){
            primeniFilterZahtevi();
        }
        if(chbPrimeniFilterPrijave.isSelected()){
            primeniFilterPrijave();
        }

    }//GEN-LAST:event_chbLokacijaActionPerformed

    private void chbRasaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbRasaActionPerformed
        // TODO add your handling code here:
        if(chbPrimeniFilterZahtevi.isSelected()){
            primeniFilterZahtevi();
        }
        if(chbPrimeniFilterPrijave.isSelected()){
            primeniFilterPrijave();
        }
    }//GEN-LAST:event_chbRasaActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String napomena=txtNapomena.getText();
            Date datumResavanjaSlucaja;
            try {
                datumResavanjaSlucaja=Kontroler.vratiInstancu().parseDatum(txtDatumResavanjaSlucaja.getText());
            } catch (ParseException ex) {
                
                JOptionPane.showMessageDialog(this,"Sistem ne može da zapamti pronalazak","Greška", JOptionPane.ERROR_MESSAGE);
                //Logger.getLogger(FrmPronalazak.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }
            if(zahtev==null || prijava==null){
                JOptionPane.showMessageDialog(this, "Molimo Vas izaberite zahtev i prijavu.");
                return;
            }
            Pronalazak pronalazakZaDodavanje=new Pronalazak(prijava, zahtev, datumResavanjaSlucaja, napomena);
            ModelTabelePronalazak mtpr=(ModelTabelePronalazak) tblPronalazak.getModel();
            mtpr.add(pronalazakZaDodavanje);

        } catch (Exception ex) {
            Logger.getLogger(FrmPronalazak.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnIzaberiPrijavuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzaberiPrijavuActionPerformed
        // TODO add your handling code here:
        try {
            int indexP=tblPrijave.getSelectedRow();
            if(indexP>=0){
                ModelTabelePrijava mtp=(ModelTabelePrijava) tblPrijave.getModel();
                prijava=Kontroler.vratiInstancu().ucitajPrijavuPronalaskaPsa(mtp.getLista().get(indexP));
                txtIzabranaPrijava.setText(prijava.toString());
            }else{
                JOptionPane.showMessageDialog(this, "Sistem ne može da učita prijavu pronalaska psa.", "Greška",JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            Logger.getLogger(FrmPronalazak.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnIzaberiPrijavuActionPerformed

    private void chbPrimeniFilterPrijaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbPrimeniFilterPrijaveActionPerformed
        // TODO add your handling code here:
        if(chbPrimeniFilterPrijave.isSelected()){
            primeniFilterPrijave();
        }else{
            try {
                //PrijavaPronalaskaPsa prijavaPronalaskaPsa=new PrijavaPronalaskaPsa();
                ModelTabelePrijava mtp=(ModelTabelePrijava) tblPrijave.getModel();
                mtp.osvezi(Kontroler.vratiInstancu().ucitajListuPrijavaPronalaskaPsa());
            } catch (Exception ex) {
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_chbPrimeniFilterPrijaveActionPerformed

    private void btnIzaberiZahtevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzaberiZahtevActionPerformed
        // TODO add your handling code here:

        try {
            int indexZ=tblZahtevi.getSelectedRow();
            if(indexZ>=0){
                ModelTabeleZahtev mtz=(ModelTabeleZahtev) tblZahtevi.getModel();
                zahtev=Kontroler.vratiInstancu().ucitajZahtevZaTrazenjePsa(mtz.getLista().get(indexZ));
                txtIzabranZahtev.setText(zahtev.toString());
            }else{
                JOptionPane.showMessageDialog(this, "Sistem ne može da učita zahtev za traženje psa.", "Greška",JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            Logger.getLogger(FrmPronalazak.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnIzaberiZahtevActionPerformed

    private void chbPrimeniFilterZahteviActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbPrimeniFilterZahteviActionPerformed
        // TODO add your handling code here:
        if(chbPrimeniFilterZahtevi.isSelected()){
            primeniFilterZahtevi();
        }else{
            try {
                //ZahtevZaTrazenjePsa zahtevZaTrazenjePsa=new ZahtevZaTrazenjePsa();
                ModelTabeleZahtev mtz=(ModelTabeleZahtev) tblZahtevi.getModel();
                mtz.osvezi(Kontroler.vratiInstancu().ucitajListuZahtevaZaTrazenjePsa());
            } catch (Exception ex) {
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_chbPrimeniFilterZahteviActionPerformed

    private void btnSacuvajPronalazakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajPronalazakActionPerformed

        try {
            ModelTabelePronalazak mtp=(ModelTabelePronalazak) tblPronalazak.getModel();
            List<Pronalazak> listaPronalazaka=mtp.getLista();
            if(listaPronalazaka.isEmpty()){
                return;
            }
            Kontroler.vratiInstancu().zapamtiPronalazak(listaPronalazaka);
            primeniMod(EnumModForme.SHOW);
            

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,ex.getMessage(),"Greška", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FrmPronalazak.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnSacuvajPronalazakActionPerformed

    private void btnNazadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNazadActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnNazadActionPerformed

    private void btnIzmeniPronalazakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniPronalazakActionPerformed
        // TODO add your handling code here:

        this.mod=EnumModForme.EDIT;
        primeniMod(mod);

    }//GEN-LAST:event_btnIzmeniPronalazakActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnIzaberiPrijavu;
    private javax.swing.JButton btnIzaberiZahtev;
    private javax.swing.JButton btnIzbaci;
    private javax.swing.JButton btnIzmeniPronalazak;
    private javax.swing.JButton btnNazad;
    private javax.swing.JButton btnSacuvajPronalazak;
    private javax.swing.JComboBox<Object> cbLokacija;
    private javax.swing.JComboBox<Object> cbRasa;
    private javax.swing.JCheckBox chbLokacija;
    private javax.swing.JCheckBox chbPrimeniFilterPrijave;
    private javax.swing.JCheckBox chbPrimeniFilterZahtevi;
    private javax.swing.JCheckBox chbRasa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblDatumResavanjaSlucaja;
    private javax.swing.JLabel lblErrorDatumResavanjaSlucaja;
    private javax.swing.JLabel lblIzabranZahtev;
    private javax.swing.JLabel lblIzabranaPrijava;
    private javax.swing.JLabel lblNapomena;
    private javax.swing.JPanel pnFilteri;
    private javax.swing.JPanel pnPrijave;
    private javax.swing.JPanel pnPronalasci;
    private javax.swing.JPanel pnPronalazak;
    private javax.swing.JPanel pnZahtevi;
    private javax.swing.JTable tblPrijave;
    private javax.swing.JTable tblPronalazak;
    private javax.swing.JTable tblZahtevi;
    private javax.swing.JTextField txtDatumResavanjaSlucaja;
    private javax.swing.JTextField txtIzabranZahtev;
    private javax.swing.JTextField txtIzabranaPrijava;
    private javax.swing.JTextField txtNapomena;
    // End of variables declaration//GEN-END:variables

    private void primeniMod(EnumModForme mod) {
        switch(mod){
            case SHOW:
                txtDatumResavanjaSlucaja.setEnabled(false);
                txtNapomena.setEnabled(false);
                btnIzmeniPronalazak.setVisible(true);
                btnNazad.setVisible(true);
                btnSacuvajPronalazak.setVisible(false);
                
                tblPrijave.setEnabled(false);
                tblZahtevi.setEnabled(false);
                chbRasa.setEnabled(false);
                chbLokacija.setEnabled(false);
                chbPrimeniFilterZahtevi.setEnabled(false);
                chbPrimeniFilterPrijave.setEnabled(false);
                cbRasa.setEnabled(false);
                cbLokacija.setEnabled(false);
                btnDodaj.setEnabled(false);
                tblPronalazak.setEnabled(false);
                btnIzbaci.setEnabled(false);
                btnIzaberiPrijavu.setEnabled(false);
                btnIzaberiZahtev.setEnabled(false);
               
                break;
            case EDIT:
                txtDatumResavanjaSlucaja.setEnabled(true);
                txtNapomena.setEnabled(true);
                btnIzmeniPronalazak.setVisible(false);
                btnNazad.setVisible(true);
                btnSacuvajPronalazak.setVisible(true);
                
                
                tblPrijave.setEnabled(true);
                tblZahtevi.setEnabled(true);
                chbRasa.setEnabled(true);
                chbLokacija.setEnabled(true);
                chbPrimeniFilterZahtevi.setEnabled(true);
                chbPrimeniFilterPrijave.setEnabled(true);
                cbRasa.setEnabled(true);
                cbLokacija.setEnabled(true);
                btnDodaj.setEnabled(true);
                tblPronalazak.setEnabled(true);
                btnIzbaci.setEnabled(true);
                btnIzaberiPrijavu.setEnabled(true);
                btnIzaberiZahtev.setEnabled(true);
                break;
            case NEW:
                txtDatumResavanjaSlucaja.setEnabled(true);
                txtNapomena.setEnabled(true);
                btnIzmeniPronalazak.setVisible(false);
                btnNazad.setVisible(true);
                btnSacuvajPronalazak.setVisible(true);
                
                tblPrijave.setEnabled(true);
                tblZahtevi.setEnabled(true);
                chbRasa.setEnabled(true);
                chbLokacija.setEnabled(true);
                chbPrimeniFilterZahtevi.setEnabled(true);
                chbPrimeniFilterPrijave.setEnabled(true);
                cbRasa.setEnabled(true);
                cbLokacija.setEnabled(true);
                btnDodaj.setEnabled(true);
                tblPronalazak.setEnabled(true);
                btnIzbaci.setEnabled(true);
                btnIzaberiPrijavu.setEnabled(true);
                btnIzaberiZahtev.setEnabled(true);
                break;
        }
    }

    private void srediFormu() {
        if(pronalazak!=null){
            prijava=pronalazak.getPrijavaPronalaskaPsa();
            zahtev=pronalazak.getZahtevZaTrazenjePsa();
        }
        lblErrorDatumResavanjaSlucaja.setVisible(false);
        tblPrijave.setModel(new ModelTabelePrijava(new ArrayList<PrijavaPronalaskaPsa>()));
        tblZahtevi.setModel(new ModelTabeleZahtev(new ArrayList<ZahtevZaTrazenjePsa>()));
        tblPronalazak.setModel(new ModelTabelePronalazak(new ArrayList<Pronalazak>()));
        txtIzabranZahtev.setEnabled(false);
        txtIzabranaPrijava.setEnabled(false);
        popuniComboRasa();
        popuniComboLokacija();
        popuniTabeluPrijava();
        popuniTabeluZahteva();
        popuniVrednosti();
        
    }

    private void popuniVrednosti() {
        if(pronalazak!=null){
            txtDatumResavanjaSlucaja.setText(Kontroler.vratiInstancu().formatDatum(pronalazak.getDatumResavanjaSlucaja()));
            txtNapomena.setText(pronalazak.getNapomena());
            txtIzabranZahtev.setText(pronalazak.getZahtevZaTrazenjePsa().toString());
            txtIzabranaPrijava.setText(pronalazak.getPrijavaPronalaskaPsa().toString());
            //cbPrijavaPronalaskaPsa.setSelectedItem(pronalazak.getPrijavaPronalaskaPsa());
            //cbZahtevZaTrazenjePsa.setSelectedItem(pronalazak.getZahtevZaTrazenjePsa());
        }
    }

    private void popuniComboRasa() {
        try {
            List<Rasa> listaRasa=Kontroler.vratiInstancu().ucitajListuRasa();
            cbRasa.removeAllItems();
            for(Rasa r:listaRasa){
                cbRasa.addItem(r);
            }
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void popuniComboLokacija() {
        try {
            List<Lokacija> listaLokacija=Kontroler.vratiInstancu().ucitajListuLokacija();
            cbLokacija.removeAllItems();
            for(Lokacija l:listaLokacija){
                cbLokacija.addItem(l);
            }
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void popuniTabeluPrijava() {
         try {
            List<PrijavaPronalaskaPsa> listaPrijava=Kontroler.vratiInstancu().ucitajListuPrijavaPronalaskaPsa();
            ModelTabelePrijava mtp=new ModelTabelePrijava(listaPrijava);
            tblPrijave.setModel(mtp);
            mtp.fireTableDataChanged();
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void popuniTabeluZahteva() {
         try {
            List<ZahtevZaTrazenjePsa> listaZahteva=Kontroler.vratiInstancu().ucitajListuZahtevaZaTrazenjePsa();
            ModelTabeleZahtev mtz=new ModelTabeleZahtev(listaZahteva);
            tblZahtevi.setModel(mtz);
            mtz.fireTableDataChanged();
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
 
    }
    private void primeniFilterZahtevi() {
        ZahtevZaTrazenjePsa zahtevZaTrazenjePsa=new ZahtevZaTrazenjePsa();
        ModelTabeleZahtev mtz=(ModelTabeleZahtev) tblZahtevi.getModel();
        
        if(chbLokacija.isSelected() && chbRasa.isSelected()){
            try {
                zahtevZaTrazenjePsa.setLokacija((Lokacija) cbLokacija.getSelectedItem());
                zahtevZaTrazenjePsa.setRasa((Rasa) cbRasa.getSelectedItem());
                List<ZahtevZaTrazenjePsa> lista=Kontroler.vratiInstancu().nadjiZahteveZaTrazenjePsa(zahtevZaTrazenjePsa);
                mtz.osvezi(lista);
                return;
            } catch (Exception ex) {
                mtz.osvezi(new ArrayList<ZahtevZaTrazenjePsa>());
                 JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }
        }
        if(chbRasa.isSelected()){
            try {
                zahtevZaTrazenjePsa.setRasa((Rasa) cbRasa.getSelectedItem());
                mtz.osvezi(Kontroler.vratiInstancu().nadjiZahteveZaTrazenjePsa(zahtevZaTrazenjePsa));
            } catch (Exception ex) { 
                mtz.osvezi(new ArrayList<ZahtevZaTrazenjePsa>());
                 JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }
        }if(chbLokacija.isSelected()){
            try {
                zahtevZaTrazenjePsa.setLokacija((Lokacija) cbLokacija.getSelectedItem());
                mtz.osvezi(Kontroler.vratiInstancu().nadjiZahteveZaTrazenjePsa(zahtevZaTrazenjePsa));
            } catch (Exception ex) {
                mtz.osvezi(new ArrayList<ZahtevZaTrazenjePsa>());
                 JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }
        }
    }
    private void primeniFilterPrijave() {
         PrijavaPronalaskaPsa prijavaPronalaskaPsa=new PrijavaPronalaskaPsa();
        ModelTabelePrijava mtp=(ModelTabelePrijava) tblPrijave.getModel();
        
        if(chbLokacija.isSelected() && chbRasa.isSelected()){
            try {
                prijavaPronalaskaPsa.setLokacija((Lokacija) cbLokacija.getSelectedItem());
                prijavaPronalaskaPsa.setRasa((Rasa) cbRasa.getSelectedItem());
                List<PrijavaPronalaskaPsa> lista=Kontroler.vratiInstancu().nadjiPrijavePronalaskaPsa(prijavaPronalaskaPsa);
                mtp.osvezi(lista);
                return;
            } catch (Exception ex) {
                mtp.osvezi(new ArrayList<PrijavaPronalaskaPsa>());
                 JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }
        }
        if(chbRasa.isSelected()){
            try {
                prijavaPronalaskaPsa.setRasa((Rasa) cbRasa.getSelectedItem());
                mtp.osvezi(Kontroler.vratiInstancu().nadjiPrijavePronalaskaPsa(prijavaPronalaskaPsa));
            } catch (Exception ex) {
                mtp.osvezi(new ArrayList<PrijavaPronalaskaPsa>());
                 JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }
        }if(chbLokacija.isSelected()){
            try {
                prijavaPronalaskaPsa.setLokacija((Lokacija) cbLokacija.getSelectedItem());
                mtp.osvezi(Kontroler.vratiInstancu().nadjiPrijavePronalaskaPsa(prijavaPronalaskaPsa));
            } catch (Exception ex) {
                mtp.osvezi(new ArrayList<PrijavaPronalaskaPsa>());
                 JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }
        }
    }

}
